# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "ehci_pci" "ahci" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f2f1bf42-f98a-4b50-b19f-4e81f643b7f7";
      fsType = "ext4";
    };

  fileSystems."/var/lib/data" =
    { device = "/dev/disk/by-uuid/62afd782-13c7-458c-9f9b-ad938ef6e1e0";
      fsType = "btrfs";
    };

  fileSystems."/var/lib/containers/storage/overlay" =
    { device = "/var/lib/containers/storage/overlay";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/lib/containers/storage/overlay-containers/0bd6604511d14334bfd8992741fe8db7d9cf54a62f56a6ffc93c7ecf86a88a4b/userdata/shm" =
    { device = "shm";
      fsType = "tmpfs";
    };

  fileSystems."/var/lib/containers/storage/overlay-containers/ce804dbe098fa6f942e8fb93d42f13220fd8de90eece914bae4476bd47ad620a/userdata/shm" =
    { device = "shm";
      fsType = "tmpfs";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
